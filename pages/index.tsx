import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Layout } from "../src/components/layout/Layout";
import { Jumbotron } from "../src/components/jumbotron/Jumbotron";
import { Card } from "../src/components/card/Card";
import { CgArrowLongRight } from "react-icons/cg";
import { useRouter } from "next/router";
import { gql, InMemoryCache, ApolloClient } from "@apollo/client";

import { Toast } from "../src/components/toast/Toast";

import { useContext } from "react";

import { GlobalContext } from "../src/context/GlobalState";

import { GET_LATEST_PRODUCTS } from "../graphql/client/queries";

import FadeIn from "react-fade-in/lib/FadeIn";
const Home: NextPage = ({ data }: any) => {
  const { latestProducts } = data;

  const { show } = useContext(GlobalContext);

  const router = useRouter();
  return (
    <div>
      <Head>
        <title>Westore</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <Jumbotron />
        <div className="flex items-center justify-between mt-5 mb-3">
          <ul className="sm:flex sm:items-center ">
            <li className="text-2xl font-black text-indigo-600">Latest</li>
            <li className="sm:pl-4 text-slate-400 text-sm">
              Showing {latestProducts.length} results
            </li>
          </ul>
          <button
            onClick={() => router.push("/shop")}
            className=" text-sm font-bold text-indigo-600 flex items-center hover:text-indigo-800"
          >
            All Products <CgArrowLongRight className="ml-1" fontSize={21} />
          </button>
        </div>
        <div className="grid sm:grid-cols-2 md:grid-cols-3 gap-4 mt-4 mb-4 flex flex-wrap">
          {latestProducts.map((product: any, idx: any) => (
            <Card
              key={idx}
              id={product.id}
              img={product.image}
              title={product.name}
              description={product.description}
              price={"PHP " + product.price}
            />
          ))}
        </div>
        {show ? <Toast /> : null}
      </Layout>
    </div>
  );
};

export default Home;

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: "http://localhost:3000/api/graphql",
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: GET_LATEST_PRODUCTS,
  });

  return {
    props: {
      data: data,
    },
  };
}
